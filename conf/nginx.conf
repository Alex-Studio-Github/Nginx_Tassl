
user  root;
#daemon off;
#master_process off;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server

    upstream httpsGw{
        server 192.168.6.205:443;
    }

    server {
        listen       445 ssl;
        server_name  localhost;


        #use tasscard engine by key index
        ssl_certificate          /root/tasscard_engine/cert/server/sm2/SS_SM2_CARD.crt;
        ssl_certificate_key      engine:tasscard_sm2:20;
        ssl_enc_certificate      /root/tasscard_engine/cert/server/sm2/SE_SM2_CARD.crt;
        ssl_enc_certificate_key  engine:tasscard_sm2:21;


        #use tasscard engine by cipher key file 
        #ssl_certificate          /root/tasscard_engine/cert/server/sm2/SS_SM2_CARD.crt;
        #ssl_certificate_key      engine:tasscard_sm2:/root/tasscard_engine/cert/server/sm2/SS_SM2_CARD.key;
        #ssl_enc_certificate      /root/tasscard_engine/cert/server/sm2/SE_SM2_CARD.crt;
        #ssl_enc_certificate_key  engine:tasscard_sm2:/root/tasscard_engine/cert/server/sm2/SE_SM2_CARD.key;

        #use tasscard engine do sm4 flag 
        #ssl_tass_sm4    on;

        #ssl_verify_client on;
        #ssl_client_certificate /root/tasscard_engine/cert/client/sm2/ca.crt;

        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;

        #ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers  on;


        location / {
            proxy_ssl_gm on;
            proxy_ssl_tass_sm4 on;
            proxy_ssl_ciphers ECDHE-SM4-SM3;

            proxy_ssl_certificate          /root/tasscard_engine/cert/server/sm2/org_ss.crt;
            proxy_ssl_certificate_key      /root/tasscard_engine/cert/server/sm2/org_ss.key;
            proxy_ssl_enc_certificate      /root/tasscard_engine/cert/server/sm2/org_se.crt;
            proxy_ssl_enc_certificate_key  /root/tasscard_engine/cert/server/sm2/org_se.key;

	    proxy_pass https://httpsGw;
        }
    }

}

# del the # [:133,150s/^.//]
# add the # [:133,150s/^./#/]
# stream{

#      upstream streamGw{
#          server 192.168.6.223:443;
#      }

#     server{
#         listen 9091;
#         proxy_ssl on;
#         proxy_ssl_gm on;
#         proxy_ssl_ciphers ECDHE-SM4-SM3;

#         proxy_ssl_certificate          /root/tasscard_engine/cert/server/sm2/org_ss.crt;
#         proxy_ssl_certificate_key      /root/tasscard_engine/cert/server/sm2/org_ss.key;
#         proxy_ssl_enc_certificate      /root/tasscard_engine/cert/server/sm2/org_se.crt;
#         proxy_ssl_enc_certificate_key  /root/tasscard_engine/cert/server/sm2/org_se.key;


#         proxy_pass streamGw;
#      }
# }

